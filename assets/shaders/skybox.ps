varying vec2 outPosition;

uniform vec3 SunPosition;
uniform vec3 MoonPosition;
uniform float TimeOfDay;

void main()
{
    vec3 worldPos = (InvViewDirProjection * vec4(outPosition, 1.0, 1.0)).xyz;

    vec3 color = atmosphere(
        normalize(worldPos),            // normalized ray direction
        vec3(0,6372e3,0),               // ray origin
        SunPosition,                    // position of the sun
        22.0,                           // intensity of the sun
        6371e3,                         // radius of the planet in meters
        6471e3,                         // radius of the atmosphere in meters
        vec3(5.5e-6, 13.0e-6, 22.4e-6), // Rayleigh scattering coefficient
        21e-6,                          // Mie scattering coefficient
        8e3,                            // Rayleigh scale height
        1.2e3,                          // Mie scale height
        0.758                           // Mie preferred scattering direction
    );

    color = 1.0 - exp(-1.0 * color);

    float nightSkyRamp = max(0.0, (1.0 - worldPos.y / 1.0));
    vec3 final = (vec3(0.07, 0.05, 0.1) * nightSkyRamp) + color;

    gl_FragColor = vec4(final, 1.0);
}